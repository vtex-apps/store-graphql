type OrderForm {
  """
  orderFormId is used as cacheId
  """
  cacheId: ID
  orderFormId: String
  customData: CustomData
  value: Float
  items: [OrderFormItem]
  salesChannel: String
  loggedIn: Boolean
  isCheckedIn: Boolean
  storeId: String
  allowManualPrice: Boolean
  canEditData: Boolean
  userProfileId: String
  userType: String
  ignoreProfileData: Boolean
  totalizers: [Totalizer]
  clientProfileData: ClientProfile
  sellers: [OrderFormSeller]
  shippingData: OrderFormShippingData
  storePreferencesData: StorePreferencesData
  itemMetadata: ItemMetadata
  checkedInPickupPointId: String
  pickupPointCheckedIn: PickupPoint
}

type OrderFormSeller {
  id: String
  name: String
}

type CustomData {
  customApps: [CustomApp]
}

scalar CustomFields
type CustomApp {
  fields: CustomFields
  id: String
  major: Int
}

type StorePreferencesData {
  countryCode: String
  currencyCode: String
  timeZone: String
  currencyFormatInfo: CurrencyFormatInfo
  currencySymbol: String
}

type CurrencyFormatInfo {
  currencyDecimalDigits: Int
  currencyDecimalSeparator: String
  currencyGroupSeparator: String
  startsWithCurrencySymbol: Boolean
}

scalar ProductCategories

type OrderFormItem {
  id: ID
  name: String @translatableV2
  detailUrl: String
  imageUrl: String @toVtexAssets
  skuName: String @translatableV2
  productRefId: String
  quantity: Float
  uniqueId: String
  productId: String
  refId: String
  ean: String
  priceValidUntil: String
  price: Float
  tax: Int
  listPrice: Float
  sellingPrice: Float
  rewardValue: Int
  isGift: Boolean
  parentItemIndex: Int
  parentAssemblyBinding: String
  additionalInfo: ItemAdditionalInfo
  """
  Informations related to assembly options children of this item
  """
  assemblyOptions: AssemblyOptionItem
  """
  ID of item's seller
  """
  seller: String
  """
  Item index on cart
  """
  cartIndex: Int
  """
  Category ids on orderFormItem
  """
  productCategoryIds: String
  productCategories: ProductCategories
  """
  Price tags on orderFormItem
  """
  priceTags: [PriceTags]
  """
  measurementUnit on orderFormItem
  """
  measurementUnit: String
  """
  Selling price of item summing with all of its children items selling prices.
  """
  sellingPriceWithAssemblies: Float
  """
  unitMultiplier on orderFormItem
  """
  unitMultiplier: Float
  canHaveAttachment: Boolean
  priceDefinition: PriceDefinition
}

type PriceDefinition {
  calculatedSellingPrice: Float
  sellingPrices: [SellingPrice]
  total: Float
}

type SellingPrice {
  quantity: Float
  value: Float
}

type ItemAdditionalInfo {
  brandName: String
}

type PriceTags {
  identifier: String
  isPercentual: Boolean
  name: String
  rawValue: Float
  value: Int
}

type AssemblyOptionItem {
  """
  Assembly options added to parent OrderFormItem
  """
  added: [AddedOptionItem]!
  """
  Assembly options removed from parent OrderFormItem
  """
  removed: [RemovedOptionItem]!
  """
  Selling price of parent item
  """
  parentPrice: Float
}

type Totalizer {
  id: ID
  name: String
  value: Float
}

type ClientProfile {
  email: String
  firstName: String
  lastName: String
  phone: String
  isCorporate: Boolean
  corporateDocument: String
  corporateName: String
  corporatePhone: String
  document: String
  documentType: String
  stateInscription: String
  tradeName: String
}

type OrderFormShippingData {
  address: Address
  availableAddresses: [Address]!
  selectedAddresses: [Address]!
}

scalar InputValues

input OrderFormItemInput {
  id: Int
  index: Int
  quantity: Int
  seller: ID
  inputValues: InputValues
  options: [AssemblyOptionInput]
}

input OrderFormAddressInput {
  addressId: String
  addressType: String
  postalCode: String
  country: String
  receiverName: String
  city: String
  state: String
  street: String
  number: String
  complement: String
  neighborhood: String
  geoCoordinates: [Float]
  isDisposable: Boolean
}

input OrderFormPaymentInput {
  paymentSystem: Int
  referenceValue: Float
  bin: Int
  tokenId: String
}

input OrderFormProfileInput {
  email: String
  isCorporate: Boolean
  corporateDocument: String
  corporateName: String
  corporatePhone: String
  document: String
  documentType: String
  firstName: String
  lastName: String
  phone: String
  stateInscription: String
  tradeName: String
}

input OrderFormPaymentTokenInput {
  tokenId: String
  cardNumber: String
  bin: String
  paymentSystem: String
  paymentSystemName: String
}

input OrderFormCheckinInput {
  isCheckedIn: Boolean
  pickupPointId: String
}

input OrderFormInputUTMParams {
  campaign: String
  medium: String
  source: String
}

input OrderFormInputUTMIParams {
  campaign: String
  part: String
  page: String
}

type RemovedOptionItem {
  """
  The initialQuantity of the assembly option CompositionItem
  """
  initialQuantity: Int
  """
  The amount that the user removed of this assembly option
  """
  removedQuantity: Int
  """
  The name of this assembly option
  """
  name: String
}

type AddedOptionItem {
  """
  The OrderFormItem of this assembly options, as appering on cart
  """
  item: OrderFormItem
  """
  Composition item of assembly option, as it appears on ItemMetadata of OrderForm
  """
  compositionItem: CompositionItem
  """
  The quantity of this assembly option per parent unit, so childQuantity / parentQuantity
  """
  normalizedQuantity: Int
  """
  The choice type of this assembly option (MULTIPLE, SINGLE or TOGGLE)
  """
  choiceType: String
  """
  The real quantity added by user, so quantity in cart minus the item's initialQuantity
  """
  extraQuantity: Int
}

type CheckoutSLA {
  cacheId: ID
  id: String
  deliveryChannel: String
  name: String
  shippingEstimate: String
  pickupStoreInfo: PickupStoreInfo
  pickupPointId: String
  pickupDistance: Float
}

type PickupStoreInfo {
  friendlyName: String
  address: Address
}
